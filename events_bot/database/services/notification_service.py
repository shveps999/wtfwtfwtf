from typing import List
from sqlalchemy.ext.asyncio import AsyncSession
import logfire
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from ..repositories import UserRepository
from ..models import User, Post


class NotificationService:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"""

    @staticmethod
    async def get_users_to_notify(db: AsyncSession, post: Post) -> List[User]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç–µ.
        –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ `post.categories` —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ `selectinload`.
        """
        # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª–µ–Ω –Ω–µ–Ω—É–∂–Ω—ã–π –≤—ã–∑–æ–≤ db.refresh –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ---
        # –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É —Å–≤—è–∑–µ–π (categories, author) –ª–µ–∂–∏—Ç –Ω–∞ –∫–æ–¥–µ,
        # –∫–æ—Ç–æ—Ä—ã–π –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç `post` –∏–∑ –ë–î.
        # await db.refresh(post, attribute_names=["author", "categories"])
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø—Ä–æ–≤–µ—Ä—è—è, —á—Ç–æ —Å–≤—è–∑—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞
        if not hasattr(post, 'categories') or not post.categories:
            logfire.warning(f"–£ –ø–æ—Å—Ç–∞ {post.id} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")
            return []
        
        category_ids = [cat.id for cat in post.categories]
        post_city = getattr(post, 'city', None)
        logfire.info(f"–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –≥–æ—Ä–æ–¥={post_city}, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏={category_ids}")
        
        users = await UserRepository.get_users_by_city_and_categories(
            db, post_city, category_ids
        )

        # –ò—Å–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        filtered_users = [user for user in users if user.id != post.author_id]
        logfire.info(f"–ù–∞–π–¥–µ–Ω–æ {len(filtered_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∞–≤—Ç–æ—Ä –ø–æ—Å—Ç–∞ –∏—Å–∫–ª—é—á–µ–Ω).")
        
        return filtered_users

    @staticmethod
    def format_post_notification(post: Post) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Å—Ç–µ."""
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ (lazy load)
        category_names = []
        if hasattr(post, 'categories') and post.categories:
            category_names = [getattr(cat, 'name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') for cat in post.categories]
        
        category_str = ', '.join(category_names) if category_names else '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
        
        author_name = '–ê–Ω–æ–Ω–∏–º'
        if hasattr(post, 'author') and post.author:
            author = post.author
            author_name = getattr(author, 'first_name', None) or getattr(author, 'username', '–ê–Ω–æ–Ω–∏–º')
        
        event_at = getattr(post, 'event_at', None)
        event_str = event_at.strftime('%d.%m.%Y %H:%M (UTC)') if event_at else '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'
        
        return (
            f"üì¨ –ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö: {category_str}\n\n"
            f"<b>{post.title}</b>\n\n"
            f"<i>{post.content}</i>\n\n"
            f"üë§ –ê–≤—Ç–æ—Ä: {author_name}\n"
            f"üìÖ –ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–æ: {event_str}"
        )

    @staticmethod
    def get_like_keyboard(post_id: int, liked: bool = False) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ª–∞–π–∫–∞."""
        button_text = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º" if liked else "ü§ç –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text=button_text, callback_data=f"like_post_{post_id}")]
            ]
        )
        return keyboard