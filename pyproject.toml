[project]
name = "events-bot"
version = "0.1.0"
description = "Современный асинхронный Telegram бот для публикации постов с системой модерации"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiogram>=3.21.0",
    "logfire[sqlalchemy]>=3.22.0",
    "psycopg[binary]>=3.2.9",
    "sqlalchemy>=2.0.41",
    "asyncpg>=0.29.0",
    "aiosqlite>=0.19.0",
    "aiofiles>=23.0.0",
    "aioboto3>=15.0.0",
    "types-aioboto3[s3]>=15.0.0",
    "python-dotenv>=1.0.1",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "safety>=2.3.0",
    "validate-pyproject>=0.15.0",
]

[project.urls]
Homepage = "https://github.com/your-username/events_bot"
Repository = "https://github.com/your-username/events_bot"
Issues = "https://github.com/your-username/events_bot/issues"

[tool.ruff]
target-version = "py312"
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiogram.*",
    "logfire.*",
    "asyncpg.*",
    "aiosqlite.*",
    "aiomysql.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=events_bot",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["events_bot"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]